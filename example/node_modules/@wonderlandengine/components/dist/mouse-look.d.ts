/**
 * Controls the camera through mouse movement.
 *
 * Efficiently implemented to affect object orientation only
 * when the mouse moves.
 */
export class MouseLookComponent extends Component {
    static Properties: {
        /** Mouse look sensitivity */
        sensitity: {
            type: Type;
            default: number;
        };
        /** Require a mouse button to be pressed to control view.
         * Otherwise view will allways follow mouse movement */
        requireMouseDown: {
            type: Type;
            default: boolean;
        };
        /** If "moveOnClick" is enabled, mouse button which should
         * be held down to control view */
        mouseButtonIndex: {
            type: Type;
        };
        /** Enables pointer lock on "mousedown" event on canvas */
        pointerLockOnClick: {
            type: Type;
            default: boolean;
        };
    };
    init(): void;
    currentRotationY: number | undefined;
    currentRotationX: any;
    origin: Float32Array | undefined;
    parentOrigin: Float32Array | undefined;
    rotationX: number | undefined;
    rotationY: number | undefined;
    start(): void;
    mouseDown: boolean | undefined;
}
import { Component } from '@wonderlandengine/api';
import { Type } from '@wonderlandengine/api';
