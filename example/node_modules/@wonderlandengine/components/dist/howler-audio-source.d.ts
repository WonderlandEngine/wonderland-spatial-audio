/**
 * (Spatial) audio source based on [Howler.js](https://howlerjs.com/).
 *
 * Creates a Howler audio source, plays an audio file on it and updates
 * its position.
 *
 * Optimizes the position update to only update if the difference to last
 * position is larger than half a centimeter. To force updates (e.g. if
 * the sound source is _very_ close to the listener),
 * use `.updatePosition()`.
 */
export class HowlerAudioSource extends Component {
    static Properties: {
        /** Volume */
        volume: {
            type: Type;
            default: number;
        };
        /** Whether audio should be spatialized/positional */
        spatial: {
            type: Type;
            default: boolean;
        };
        /** Whether to loop the sound */
        loop: {
            type: Type;
            default: boolean;
        };
        /** Whether to start playing automatically */
        autoplay: {
            type: Type;
            default: boolean;
        };
        /** URL to a sound file to play */
        src: {
            type: Type;
            default: string;
        };
    };
    start(): void;
    audio: any;
    lastPlayedAudioId: any;
    origin: Float32Array | undefined;
    lastOrigin: Float32Array | undefined;
    update(): void;
    updatePosition(): void;
    play(): void;
    stop(): void;
    onDeactivate(): void;
}
import { Component } from '@wonderlandengine/api';
import { Type } from '@wonderlandengine/api';
