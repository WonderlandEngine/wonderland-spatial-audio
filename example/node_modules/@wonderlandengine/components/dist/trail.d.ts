/**
 * Dynamic mesh-based trail
 *
 * This component keeps track of the world position of the object it's added to.
 * At a fixed interval the world position is stored as start and end points of the trail segments.
 *
 * The trail tapers off along its length. UV texture coordinates are setup such that the
 * U-axis covers the width of the trail and the V-axis covers the length of the trail.
 * This allows the trail's appearance to be defined using a texture.
 */
export class Trail extends Component {
    static Properties: {
        /** The material to apply to the trail mesh */
        material: {
            type: Type;
        };
        /** The number of segments in the trail mesh */
        segments: {
            type: Type;
            default: number;
        };
        /** The time interval before recording a new point */
        interval: {
            type: Type;
            default: number;
        };
        /** The width of the trail (in world space) */
        width: {
            type: Type;
            default: number;
        };
        /** Whether or not the trail should taper off */
        taper: {
            type: Type;
            default: boolean;
        };
        /**
         * The maximum delta time in seconds, above which the trail resets.
         * This prevents the trail from jumping around when updates happen
         * infrequently (e.g. when the tab doesn't have focus).
         */
        resetThreshold: {
            type: Type;
            default: number;
        };
    };
    init(): void;
    points: any[] | undefined;
    currentPointOffset: number | undefined;
    up: number[] | undefined;
    timeTillNext: any;
    start(): void;
    trailContainer: import("@wonderlandengine/api").Object3D | undefined;
    meshComp: import("@wonderlandengine/api").MeshComponent | null | undefined;
    indexData: Uint32Array | undefined;
    mesh: Mesh | undefined;
    updateVertices(): void;
    resetTrail(): void;
    currentPointIndex: any;
    update(dt: any): void;
    onActivate(): void;
    onDestroy(): void;
}
import { Component } from '@wonderlandengine/api';
import { Mesh } from '@wonderlandengine/api';
import { Type } from '@wonderlandengine/api';
